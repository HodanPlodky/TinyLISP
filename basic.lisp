(+ 2000 0)
(letrec (seq) ((lambda (from to step f)
    (if (> from to)
        null
        (cons (f from) (seq (+ from step) to step f))
    )
))
(letrec (sum) ((lambda (n) (if (eq? n 0) 0 (+ n (sum (- n 1))))))
    (seq 1 1000 1 (lambda (x) (cons x (sum x))))
))